"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[67031],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(296540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}},215623:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var o=t(474848),i=t(28453);const s={id:"docs-chain-ui-components-example-button-theme-overrides-example",title:"Button Theme Overrides Example",hide_title:!0,slug:"./button-theme-overrides-example",displayed_sidebar:"pushChainSidebar",sidebar_position:4,image:"/assets/docs/previews/docs_chain_ui_components_example--button_theme_overrides_example.png"},r=void 0,a={id:"chain/ui-components/Examples/docs-chain-ui-components-example-button-theme-overrides-example",title:"Button Theme Overrides Example",description:"Example",source:"@site/docs/chain/04-ui-components/Examples/04-Button-Theme-Overrides-Example.mdx",sourceDirName:"chain/04-ui-components/Examples",slug:"/chain/ui-components/Examples/button-theme-overrides-example",permalink:"/push-website/pr-preview/pr-1061/docs/chain/ui-components/Examples/button-theme-overrides-example",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-website/blob/main/docs/chain/04-ui-components/Examples/04-Button-Theme-Overrides-Example.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"docs-chain-ui-components-example-button-theme-overrides-example",title:"Button Theme Overrides Example",hide_title:!0,slug:"./button-theme-overrides-example",displayed_sidebar:"pushChainSidebar",sidebar_position:4,image:"/assets/docs/previews/docs_chain_ui_components_example--button_theme_overrides_example.png"},sidebar:"pushChainSidebar",previous:{title:"Theme Overrides Example",permalink:"/push-website/pr-preview/pr-1061/docs/chain/ui-components/Examples/theme-overrides-example"},next:{title:"Tutorials",permalink:"/push-website/pr-preview/pr-1061/docs/chain/tutorials"}},l={},p=[{value:"Example",id:"example",level:2},{value:"Live playground",id:"live-playground",level:2},{value:"Live playground",id:"live-playground-1",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.p,{children:"This example demonstrates a basic wallet integration with the basic account button theme overrides."}),"\n",(0,o.jsx)(n.h2,{id:"live-playground",children:"Live playground"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",metastring:"live customPropMinimized = 'true'",live:!0,children:"// DO NOT FORGET TO IMPORT LIBRARIES\n// NOT NEEDED HERE SINCE PLAYGROUND IMPORTS INTERNALLY\n// import { PushWalletProvider, PushUniversalAccountButton, usePushWalletContext, CONSTANTS } from '@pushchain/ui-kit';\n\nfunction App() {\n\n  const walletConfig = {\n    uid: 'basic',\n    env: CONSTANTS.ENV.DEVNET,\n    login: {\n      email: true,\n      google: true,\n      wallet: {\n        enabled: true,\n      },\n      appPreview: true,\n    },\n    modal: {\n      loginLayout: CONSTANTS.LOGIN.SPLIT,\n      connectedLayout: CONSTANTS.CONNECTED.HOVER,\n      appPreview: true,\n    },\n  };\n\n  const appMetadata = {\n    logoUrl: \"https://plus.unsplash.com/premium_photo-1746731481770-08b2f71661d0?q=80&w=2671&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n    title: 'Test App Title',\n    description: 'Test App Description',\n  };\n\n\n  function WalletUI() {\n    const { universalAddress } = usePushWalletContext('basic');\n\n    return (\n      <div>\n        <PushUniversalAccountButton uid='basic'\n          themeOverrides={{\n          '--pwauth-btn-connect-text-color': 'red',\n          '--pwauth-btn-connect-bg-color\t': '#fff',\n          '--pwauth-btn-connected-text-color': '#000',\n          '--pwauth-btn-connected-bg-color': '#000000',\n        }} />\n      </div>\n    );\n  }\n\n  return (\n    <PushWalletProvider\n      config={walletConfig}\n      app={appMetadata}\n\n    >\n      <WalletUI />\n    </PushWalletProvider>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h1,{id:"example-1",children:"Example"}),"\n",(0,o.jsx)(n.p,{children:"This example demonstrates a basic wallet integration with the button theme overrides for both light and dark modes."}),"\n",(0,o.jsx)(n.h2,{id:"live-playground-1",children:"Live playground"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",metastring:"live customPropMinimized = 'true'",live:!0,children:"// DO NOT FORGET TO IMPORT LIBRARIES\n// NOT NEEDED HERE SINCE PLAYGROUND IMPORTS INTERNALLY\n// import { PushWalletProvider, PushUniversalAccountButton, usePushWalletContext, CONSTANTS } from '@pushchain/ui-kit';\n\nfunction NewApp() {\n\n  const secondWalletConfig = {\n    uid: 'theme',\n    env: CONSTANTS.ENV.DEVNET,\n    login: {\n      email: true,\n      google: true,\n      wallet: {\n        enabled: true,\n      },\n      appPreview: true,\n    },\n    modal: {\n      loginLayout: CONSTANTS.LOGIN.SPLIT,\n      connectedLayout: CONSTANTS.CONNECTED.HOVER,\n      appPreview: true,\n    },\n  };\n\n  const secondAppMetadata = {\n    logoUrl: \"https://plus.unsplash.com/premium_photo-1746731481770-08b2f71661d0?q=80&w=2671&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n    title: 'Test App Title',\n    description: 'Test App Description',\n  };\n\n\n  function NewWalletUI() {\n    const { universalAddress: secondAddress } = usePushWalletContext('theme');\n\n    return (\n      <div>\n        <PushUniversalAccountButton\n          uid='theme'\n          themeOverrides = {{\n            light: {\n              '--pwauth-btn-connect-text-color': 'red',\n              '--pwauth-btn-connect-bg-color\t': '#fff',\n              '--pwauth-btn-connected-text-color': '#000',\n              '--pwauth-btn-connected-bg-color': '#000000',\n            },\n            dark: {\n              '--pwauth-btn-connect-text-color': 'blue',\n              '--pwauth-btn-connect-bg-color': '#000',\n              '--pwauth-btn-connected-text-color': '#fff',\n              '--pwauth-btn-connected-bg-color': '#ffffff',\n            }\n       }} />\n      </div>\n    );\n  }\n\n  return (\n    <PushWalletProvider\n      config={secondWalletConfig}\n      app={secondAppMetadata}\n      themeMode={CONSTANTS.THEME.DARK}\n    >\n      <NewWalletUI />\n    </PushWalletProvider>\n  );\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);